from aiogram.types import ReplyKeyboardRemove

from buttons_.buttons_menu import set_menu_commands, cancel_state
from data_.repository import MyRepository
from states.mailing_state import MailingState


async def mailing_message_cmd(message):
    await MailingState.mailing.set()
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è –≤—Å—ñ—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤:", reply_markup=cancel_state())


async def mailing_user_cmd(bot, message):
    users = MyRepository().all_candidates()
    unsuccessful = 1
    user_error = ""

    if users is not None:
        for i in users:
            try:
                if i['telegram_id'] != str(message.chat.id):
                    await bot.send_message(i['telegram_id'], message.text)
            except Exception as e:
                print(f"mailing all error for user {i}: {e}")
                unsuccessful += 1
                user_error += f"{i['username']}\n"

        await message.answer(
            text=f"üì¨ –£—Å–ø—ñ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ {len(users) - unsuccessful} –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º –∑ {len(users)}\n\n"
                 f"–î–æ—Å—ñ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∏—Å—è —É –±–æ—Ç—ñ: \n{user_error}",
            reply_markup=set_menu_commands(message)
        )
    else:
        await message.answer(
            "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –¥–∞–Ω–∏—Ö, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç—ñ—Ç—å –±–æ—Ç /start",
            reply_markup=ReplyKeyboardRemove()
        )
